# Задания
# 1. Создайте константы, которые содержат названия дней недели. Используя эти
# константы, сформируйте массив дней недели и присвойте его константе WEEK.
# Выведите содержимое массива в консоль.
# 2. Создайте программу number.rb, которая принимает в качестве аргумента целое
# число, — например: number.rb 15. В качестве результата программа должна сообщать, передано ей четное или нечетное число.
# 3. Создайте программу factorial.rb, которая принимает в качестве аргумента целое
# число, — например: factorial.rb 5. В качестве результата программа должна
# выводить факториал переданного числа (факториалом здесь будет произведение
# всех чисел от 1 до 5: 1 × 2 × 3 × 4 × 5 = 120).
# 4. Создайте программу sum.rb, которая принимает в качестве аргументов последовательность чисел, — например: sum.rb 6 3 7 12 2. Подсчитайте сумму чисел и
# выведите результат.
# 5. Создайте программу age.rb, которая принимает год, месяц и день рождения пользователя. Вычислите возраст пользователя и выведите результат.
# 6. Создайте класс Hello в файле hello.rb. Внутри класса необходимо реализовать
# метод hello, который выводит приветствие в зависимости от текущего времени
# суток. С 6:00 до 12:00 метод должен возвращать «Доброе утро», с 12:00 до 18:00 —
# «Добрый день», с 18:00 до 00:00 — «Добрый вечер», с 00:00 до 6:00 — «Доброй
# ночи». Подключите класс в файле main.rb и выведите приветствие с его помощью. 

MONDAY    = "Понедельник"
TUESDAY   = "Вторник"
WEDNESDAY = "Среда"
THURSDAY  = "Четверг"
FRIDAY    = "Пятница"
SATURDAY  = "Суббота"
SUNDAY    = "Воскресенье"

WEEK = [
  MONDAY,
  TUESDAY,
  WEDNESDAY,
  THURSDAY,
  FRIDAY,
  SATURDAY,
  SUNDAY
].freeze

p WEEK

def is_num_even?(num)
  num % 2 == 0
end

puts is_num_even?(15)

puts "Введите положительное целое число: "
num = gets.chomp.to_i

def factorial(num)
  if num <= 0
    puts "Вы ввели отрицательное число или ноль"
    return nil
  end

  factor = 1
  (1..num).each do |i|
    factor *= i
  end
  factor
end

puts factorial(num)

args = ARGV

def sum_num(nums)
  return "Использование: ruby chapter6.rb num1 num2 num3..." if nums.empty?
  nums.sum { |n| n.to_i }
end

puts "Сумма: #{sum_num(args)}"

5. Создайте программу age.rb, которая принимает год, месяц и день рождения пользователя. Вычислите возраст пользователя и выведите результат.

require 'date'

def age(year, month, birthday)
  birth_date = Date.new(year, month, birthday)
  today = Date.today
  age = today.year - birth_date.year
  age -= 1 if today < birth_date + age * 365
  "Ваш возраст: #{age} лет"
end

puts age(1993, 11, 10)

class Hello
  def self.greetings
    current_hour = Time.now.hour

    case current_hour
      when 6...12
        "Доброе утро"
      when 12...18
        "Добрый день"
      when 18...24
        "Добрый вечер"
      else
        "Доброй ночи"
    end
  end
end

puts Hello.greetings
