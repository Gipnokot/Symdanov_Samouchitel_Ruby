# Задания
# 1. Создайте скрипт, который бы возводил одно целое число в другое, не прибегая
# к оператору ** или методу pow.
# 2. Создайте скрипт, который бы определял четность или нечетность числа только
# при помощи поразрядных операторов.
# 3. Есть две переменные: fst = 10 и snd = 20. Поменяйте значение переменных
# местами. Постарайтесь использовать минимальное количество кода.
# 4. Используя оператор '%', выведите число π (3.14159265358979) с точностью до
# второго знака после запятой (3.14).
# 5. При помощи поразрядных операторов закодируйте в целом числе параметры
# геометрических фигур:
# • форма: круг, треугольник, квадрат, точка;
# • координаты центра фигуры в двумерной системе координат (x, y) в диапазоне
# от 0 до 255;
# • цвет фигуры: красный, оранжевый, желтый, зеленый, голубой, синий и фиолетовый.
# Одно целое число должно представлять одну фигуру и все ее характеристики. 

def power(base, exponent)
  return 1 if exponent == 0
  return 0 if base == 0 && exponent > 0
  return nil if exponent < 0

  result = 1
  exponent.times do
    result *= base
  end
  result
end

puts power(2, 3)
puts power(2, 0)
puts power(0, 2)

def even_or_odd(n)
  n & 1 == 0 ? true : false
end

puts even_or_odd(3)

fst = 10
snd = 20

fst, snd = snd, fst

puts fst
puts snd

#через арифметические операции
fst = fst + snd
puts snd = fst - snd
puts fst = fst - snd

pi = 3.14159265358979

puts '%.2f' % pi

